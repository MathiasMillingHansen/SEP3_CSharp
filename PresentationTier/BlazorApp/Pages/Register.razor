@page "/Register"
@using Microsoft.AspNetCore.Http.HttpResults
@using HttpClients.ClientInterfaces
@using global::Shared.DTOs
@inject NavigationManager NavManager
@inject IUserService _UserService

<h3>Register</h3>

  <p>Welcome! If you don't have an account yet, you can register here:</p>

<div style="margin-bottom: 10px;">
    <RadzenFormField Style="width: 40%;" Text="Username" Variant="@variant">
        <ChildContent>
            <RadzenTextBox @bind-Value="@username"/>
        </ChildContent>
    </RadzenFormField>
</div>

<div style="margin-bottom: 10px;">
    <RadzenFormField Style="width: 40%;" Text="Password" Variant="@variant">
        <ChildContent>
            <RadzenTextBox @bind-Value="@password"/>
        </ChildContent>
    </RadzenFormField>
</div>

<div style="margin-bottom: 10px;">
    <RadzenFormField Style="width: 40%;" Text="Phone number" Variant="@variant">
        <ChildContent>
            <RadzenTextBox @bind-Value="@phonenumber"/>
        </ChildContent>
    </RadzenFormField>
</div>

<div style="margin-bottom: 10px;">
    <RadzenFormField Style="width: 40%;" Text="Email" Variant="@variant">
        <ChildContent>
            <RadzenTextBox @bind-Value="@_email"/>
        </ChildContent>
    </RadzenFormField>
</div>

<div class="mb-3">
   <RadzenButton Text="Create" Icon="lock_open" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Medium" Click="@(() => Create()) " Style="background-color: RGB(60, 128, 67)" />
    
    <RadzenButton Text="Cancel" Icon="exit_to_app" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Medium" Click="@(() => Cancel())" Style="background-color: RGB(60, 128, 67)" />
</div>

@code {
    private string username;
    private string password;
    private string phonenumber;
    private string _email;
    
    Variant variant = Variant.Outlined;
    
    private void Cancel()
    {
        NavManager.NavigateTo("");
    }

    private async Task Create()
    {
        RegisterDto registerDto = new RegisterDto(username, password, phonenumber, _email);

        await _UserService.RegisterUserAsync(registerDto);
    }

}