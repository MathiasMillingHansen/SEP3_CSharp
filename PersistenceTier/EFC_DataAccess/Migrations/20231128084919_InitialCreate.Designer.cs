// <auto-generated />
using System;
using EFC_DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EFC_DataAccess.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231128084919_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shared.DTOs.AuthorDto", b =>
                {
                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("AuthorDto");
                });

            modelBuilder.Entity("Shared.Domain.Author", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("BookIsbn")
                        .HasColumnType("integer");

                    b.Property<string>("BookOwner")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("BookIsbn", "BookOwner");

                    b.ToTable("authors");
                });

            modelBuilder.Entity("Shared.Domain.Book", b =>
                {
                    b.Property<int>("Isbn")
                        .HasColumnType("integer");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Edition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PageCount")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Isbn", "Owner");

                    b.ToTable("books");
                });

            modelBuilder.Entity("Shared.Domain.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("publishers");
                });

            modelBuilder.Entity("Shared.Domain.Author", b =>
                {
                    b.HasOne("Shared.Domain.Book", null)
                        .WithMany("Authors")
                        .HasForeignKey("BookIsbn", "BookOwner");
                });

            modelBuilder.Entity("Shared.Domain.Book", b =>
                {
                    b.Navigation("Authors");
                });
#pragma warning restore 612, 618
        }
    }
}
